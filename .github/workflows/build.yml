---
name: "Build"

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: 🏗️ Build ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Since this is an overlay which has only been allowed clickthrough on windows,
          # we only build for windows for now.
          # - name: "macos-aarch64"
          #   platform: "macos-latest" # for Arm based macs (M1 and above).
          #   target: "aarch64-apple-darwin"
          # - name: "macos-x86_64"
          #   platform: "macos-latest" # for Intel based macs.
          #   target: "x86_64-apple-darwin"
          # - name: "linux-x86_64"
          #   platform: "ubuntu-22.04"
          #   target: "x86_64-unknown-linux-gnu"
          - name: "windows-x86_64"
            platform: "windows-latest"
            target: "x86_64-pc-windows-msvc"
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ github.head_ref }}
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Sync node version and setup cache
        uses: actions/setup-node@v4.0.3
        with:
          check-latest: true
          node-version: "lts/*"
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Rust cache
        uses: swatinem/rust-cache@v2.7.3
        with:
          workspaces: "./src-tauri -> target"
      - name: Install frontend dependencies
        run: bun install
      - name: Build and package the gui
        continue-on-error: true # This allows any built artifacts to be uploaded even if the build fails.
        run: bun run tauri build --target ${{ matrix.target }}
      - name: Upload executable
        uses: actions/upload-artifact@v4.3.5
        with:
          name: ${{ matrix.name }}-executable
          path: |
            src-tauri/target/**/release/letmeknow-gui${{ matrix.platform == 'windows-latest' && '.exe' || '' }}
      - name: Upload bundle
        uses: actions/upload-artifact@v4.3.5
        with:
          name: ${{ matrix.name }}-bundle
          path: |
            src-tauri/target/**/release/bundle
